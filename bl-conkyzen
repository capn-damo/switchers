#!/bin/bash
#
#   BunsenLabs Conky selection and switcher script
#
#   Written by <damo>, April 2015 
#   Beta tested and stamped "zen" by <Sector11>
#
########################################################################
#
#   Conkys must be in $CONKYPATH
#   The name must end with an extension of ".conky" or ".conkyrc"
#   or just be plain ol' "conkyrc"
#
#   When the dialog opens, any running conkys will be checkmarked.
#
#   Click "OK" and all running conkys are stopped, and all checkmarked
#   conkys are started
#
#   To stop a conky just uncheck it, and "OK"
#
#   Running conkys are saved to a session file, and can be run with
#   the "bl-conky-session" script. To start them at login, add the 
#   following line to autostart:
#                    (sleep 2s && bl-conky-session) &
#
########################################################################

CONKYPATH=".conky"
TEMPFILE="$CONKYPATH/conky-tmp"
SESSIONFILE="$CONKYPATH/conky-session.txt"

conkyRunning(){
    > $TEMPFILE #make blank tempfile
    if [ "$(pidof conky)" ];then
        ps aux | grep [c]onkyrc |  awk  '{print $2" "$NF}' >> $TEMPFILE
    fi
}

fillArrays(){
    num="$1"
    conkysPath[$num]="$2"   # full filepath to conky
    conkysArr[$num]="$3"    # displayed name, either "<name>conky(rc)" or containing dir if just "conkyrc"
    if grep -q "$2" "$TEMPFILE";then # if conky is running (read from tempfile)
        checkArr[$num]="TRUE"
    else
        checkArr[$num]="FALSE"
    fi
}

findConky(){
# search dirs for conkys files - looking for "conky" in the name
# if "*.conky(rc)" then display it
# if "/conkyrc" display the containing dir so the name is more descriptive

num=0
# find files in CONKYPATH with conky in the name
for x in $(find .conky -type f -iname "*conky*");do 
    f=$(basename $x)
    if [[ $f = *conkyrc ]] || [[ $f = *conky ]];then
#       filename ends with *conky or *conkyrc
        CONKY=$f
        if [[ $f = conkyrc ]];then # file is called conkyrc
            # get containing directory for descriptive name
            CONKY=$(echo $x | awk -F'/' '{print $(NF-1)}')
        fi
        fillArrays $num $x $CONKY
        num=$(($num+1)) 
    fi
done
}
# get conky directories in .conky, add to array
conkyRunning
findConky

# loop through arrays, and build msg text for zenity dialog
msg=""
for ((j=0; j<${#conkysArr[*]}; j++));do
    msg="$msg ${checkArr[j]} ${conkysArr[j]}"
done

## Populate zenity dialog from array, get return value(s)
RET=`zenity --list --title "BunsenLabs Conky" --checklist --width=300 --height=500 \
    --column "Select" --column "Conky Name" --separator=":"\
    $msg`

if [[ $? == 1 ]]; then # cancel button pressed
    exit 0
else
    > $SESSIONFILE    # Create new session file
    # loop through returned choices, add to array
    i=0
    IFS=":"     # separator is ":" in returned choices
    for name in $RET; do 
        retConky[$i]=$name
        i=$(($i+1))
    done
    unset IFS;
    
    # kill all conkys
    if [ "$(pidof conky)" ];then
        killall conky
    fi
    
    for name in ${retConky[*]};do       # loop through checkmarked conky names
        for ((j=0; j<${#conkysPath[*]}; j++));do  # traverse through elements
            for f in ${conkysPath[j]};do
                conkyname=`basename $f`     # conky filename
                conkypath=`dirname $f`      # conky filepath
                DIR=`echo $f | awk -F"/" '{print $(NF-1)}'` # get directory containing the conky
                # see if it matches the returned name
                if [[ $conkyname == $name ]];then # it isn't just "conkyrc"
                    fpath="$conkypath/$conkyname"
                    echo -e "conky -c $fpath & sleep 1s" >> $SESSIONFILE
                    conky -c "$fpath" & #start the conky
#                    sleep 0.5s
                elif [[ $conkyname == "conkyrc" ]];then
                    if [[ $DIR == $name ]];then # the containing dir was used as a descriptive name
                        fpath="$conkypath/$conkyname"
                        echo -e "conky -c $fpath & sleep 1s" >> $SESSIONFILE
                        conky -c "$fpath" & #start the conky
#                        sleep 0.5s
                    fi
                fi
            done
        done
    done 
fi

rm -r $TEMPFILE

exit 0



